-- --- ACTUALIZACIÓN CUANDO LA BICICLETA SE COGE EN LA ESTACIÓN INICIAL ----
USE bicing;
DROP TRIGGER IF EXISTS bic_uso;
DELIMITER //
CREATE TRIGGER bic_uso BEFORE INSERT ON DESPLAZAMIENTOS FOR EACH ROW
BEGIN
UPDATE BICICLETAS SET Ubicacion = NULL ,En_uso=1 WHERE Id=NEW.Id_bicicleta;
END
// DELIMITER ;
-- --- ACTUALIZACIÓN CUANDO LA BICICLETA SE DEVUELVE EN LA ESTACIÓN DE DESTINO ----
USE bicing;
DROP TRIGGER IF EXISTS bic_est;
DELIMITER //
CREATE TRIGGER bic_est BEFORE UPDATE ON DESPLAZAMIENTOS FOR EACH ROW
BEGIN
UPDATE BICICLETAS SET Operativa = 1, Ubicacion = NEW.Cod_estacion_final, En_uso=0 WHERE Id=NEW.Id_bicicleta;
END
// DELIMITER ;
-- --- ACTUALIZACIÓN PARA DECLARAR QUE LA BICICLETA NO ESTÁ EN SERVICIO ----
USE bicing;
DROP TRIGGER IF EXISTS bic_taller;
// DELIMITER
CREATE TRIGGER bic_taller BEFORE INSERT ON MANTENIMIENTO FOR EACH ROW
BEGIN
DECLARE est CHAR(3);
SET est = (SELECT Ubicacion FROM BICICLETAS WHERE Id=NEW.Id_bicicleta); -- La bicicleta volverá a la estación donde fue encontrada
UPDATE BICICLETAS SET Operativa =0,Ubicacion=NULL,En_uso=NULL WHERE Id=NEW.Id_bicicleta;
END
// DELIMITER ;
-- --- ACTUALIZACIÓN DE LA BICICLETA QUE ESTÁ NUEVAMENTE OPERATIVA
USE bicing;
DROP TRIGGER IF EXISTS bic_operativa;
// DELIMITER
CREATE TRIGGER bic_operativa BEFORE UPDATE ON MANTENIMIENTO FOR EACH ROW
BEGIN
UPDATE BICICLETAS SET Operativa =1, Ubicacion= est,En_uso=0 WHERE Id= NEW.Id_bicicleta);
END
// DELIMITER ;



